{-
   CVPartner

   No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

   OpenAPI Version: 3.0.1
   CVPartner API version: 0.0.1
   Generated by OpenAPI Generator (https://openapi-generator.tech)
-}

{-|
Module : CVPartner.Lens
-}

{-# LANGUAGE KindSignatures #-}
{-# LANGUAGE NamedFieldPuns #-}
{-# LANGUAGE RankNTypes #-}
{-# LANGUAGE RecordWildCards #-}
{-# OPTIONS_GHC -fno-warn-name-shadowing -fno-warn-unused-matches -fno-warn-unused-binds -fno-warn-unused-imports #-}

module CVPartner.ModelLens where

import qualified Data.Aeson as A
import qualified Data.ByteString.Lazy as BL
import qualified Data.Data as P (Data, Typeable)
import qualified Data.Map as Map
import qualified Data.Set as Set
import qualified Data.Time as TI

import Data.Text (Text)

import Prelude (($), (.),(<$>),(<*>),(=<<),Maybe(..),Bool(..),Char,Double,FilePath,Float,Int,Integer,String,fmap,undefined,mempty,maybe,pure,Monad,Applicative,Functor)
import qualified Prelude as P

import CVPartner.Model
import CVPartner.Core


-- * Certification

-- | 'certificationOrder' Lens
certificationOrderL :: Lens_' Certification (Maybe Int)
certificationOrderL f Certification{..} = (\certificationOrder -> Certification { certificationOrder, ..} ) <$> f certificationOrder
{-# INLINE certificationOrderL #-}

-- | 'certificationStarred' Lens
certificationStarredL :: Lens_' Certification (Maybe Bool)
certificationStarredL f Certification{..} = (\certificationStarred -> Certification { certificationStarred, ..} ) <$> f certificationStarred
{-# INLINE certificationStarredL #-}

-- | 'certificationDisabled' Lens
certificationDisabledL :: Lens_' Certification (Maybe Bool)
certificationDisabledL f Certification{..} = (\certificationDisabled -> Certification { certificationDisabled, ..} ) <$> f certificationDisabled
{-# INLINE certificationDisabledL #-}

-- | 'certificationVersion' Lens
certificationVersionL :: Lens_' Certification (Maybe Int)
certificationVersionL f Certification{..} = (\certificationVersion -> Certification { certificationVersion, ..} ) <$> f certificationVersion
{-# INLINE certificationVersionL #-}

-- | 'certificationExternalUniqueId' Lens
certificationExternalUniqueIdL :: Lens_' Certification (Maybe Text)
certificationExternalUniqueIdL f Certification{..} = (\certificationExternalUniqueId -> Certification { certificationExternalUniqueId, ..} ) <$> f certificationExternalUniqueId
{-# INLINE certificationExternalUniqueIdL #-}

-- | 'certificationOwnerUpdatedAt' Lens
certificationOwnerUpdatedAtL :: Lens_' Certification (Maybe Text)
certificationOwnerUpdatedAtL f Certification{..} = (\certificationOwnerUpdatedAt -> Certification { certificationOwnerUpdatedAt, ..} ) <$> f certificationOwnerUpdatedAt
{-# INLINE certificationOwnerUpdatedAtL #-}

-- | 'certificationCreatedAt' Lens
certificationCreatedAtL :: Lens_' Certification (Maybe Text)
certificationCreatedAtL f Certification{..} = (\certificationCreatedAt -> Certification { certificationCreatedAt, ..} ) <$> f certificationCreatedAt
{-# INLINE certificationCreatedAtL #-}

-- | 'certificationUpdatedAt' Lens
certificationUpdatedAtL :: Lens_' Certification (Maybe Text)
certificationUpdatedAtL f Certification{..} = (\certificationUpdatedAt -> Certification { certificationUpdatedAt, ..} ) <$> f certificationUpdatedAt
{-# INLINE certificationUpdatedAtL #-}

-- | 'certificationName' Lens
certificationNameL :: Lens_' Certification (Maybe A.Value)
certificationNameL f Certification{..} = (\certificationName -> Certification { certificationName, ..} ) <$> f certificationName
{-# INLINE certificationNameL #-}

-- | 'certificationLongDescription' Lens
certificationLongDescriptionL :: Lens_' Certification (Maybe A.Value)
certificationLongDescriptionL f Certification{..} = (\certificationLongDescription -> Certification { certificationLongDescription, ..} ) <$> f certificationLongDescription
{-# INLINE certificationLongDescriptionL #-}

-- | 'certificationOrganizer' Lens
certificationOrganizerL :: Lens_' Certification (Maybe A.Value)
certificationOrganizerL f Certification{..} = (\certificationOrganizer -> Certification { certificationOrganizer, ..} ) <$> f certificationOrganizer
{-# INLINE certificationOrganizerL #-}

-- | 'certificationYear' Lens
certificationYearL :: Lens_' Certification (Maybe Text)
certificationYearL f Certification{..} = (\certificationYear -> Certification { certificationYear, ..} ) <$> f certificationYear
{-# INLINE certificationYearL #-}

-- | 'certificationMonth' Lens
certificationMonthL :: Lens_' Certification (Maybe Text)
certificationMonthL f Certification{..} = (\certificationMonth -> Certification { certificationMonth, ..} ) <$> f certificationMonth
{-# INLINE certificationMonthL #-}

-- | 'certificationYearExpire' Lens
certificationYearExpireL :: Lens_' Certification (Maybe Text)
certificationYearExpireL f Certification{..} = (\certificationYearExpire -> Certification { certificationYearExpire, ..} ) <$> f certificationYearExpire
{-# INLINE certificationYearExpireL #-}

-- | 'certificationMonthExpire' Lens
certificationMonthExpireL :: Lens_' Certification (Maybe Text)
certificationMonthExpireL f Certification{..} = (\certificationMonthExpire -> Certification { certificationMonthExpire, ..} ) <$> f certificationMonthExpire
{-# INLINE certificationMonthExpireL #-}



-- * Country

-- | 'countryId' Lens
countryIdL :: Lens_' Country (Text)
countryIdL f Country{..} = (\countryId -> Country { countryId, ..} ) <$> f countryId
{-# INLINE countryIdL #-}

-- | 'countryCode' Lens
countryCodeL :: Lens_' Country (Text)
countryCodeL f Country{..} = (\countryCode -> Country { countryCode, ..} ) <$> f countryCode
{-# INLINE countryCodeL #-}

-- | 'countryOffices' Lens
countryOfficesL :: Lens_' Country ([Office])
countryOfficesL f Country{..} = (\countryOffices -> Country { countryOffices, ..} ) <$> f countryOffices
{-# INLINE countryOfficesL #-}



-- * Course

-- | 'courseOrder' Lens
courseOrderL :: Lens_' Course (Maybe Int)
courseOrderL f Course{..} = (\courseOrder -> Course { courseOrder, ..} ) <$> f courseOrder
{-# INLINE courseOrderL #-}

-- | 'courseStarred' Lens
courseStarredL :: Lens_' Course (Maybe Bool)
courseStarredL f Course{..} = (\courseStarred -> Course { courseStarred, ..} ) <$> f courseStarred
{-# INLINE courseStarredL #-}

-- | 'courseDisabled' Lens
courseDisabledL :: Lens_' Course (Maybe Bool)
courseDisabledL f Course{..} = (\courseDisabled -> Course { courseDisabled, ..} ) <$> f courseDisabled
{-# INLINE courseDisabledL #-}

-- | 'courseVersion' Lens
courseVersionL :: Lens_' Course (Maybe Int)
courseVersionL f Course{..} = (\courseVersion -> Course { courseVersion, ..} ) <$> f courseVersion
{-# INLINE courseVersionL #-}

-- | 'courseExternalUniqueId' Lens
courseExternalUniqueIdL :: Lens_' Course (Maybe Text)
courseExternalUniqueIdL f Course{..} = (\courseExternalUniqueId -> Course { courseExternalUniqueId, ..} ) <$> f courseExternalUniqueId
{-# INLINE courseExternalUniqueIdL #-}

-- | 'courseOwnerUpdatedAt' Lens
courseOwnerUpdatedAtL :: Lens_' Course (Maybe Text)
courseOwnerUpdatedAtL f Course{..} = (\courseOwnerUpdatedAt -> Course { courseOwnerUpdatedAt, ..} ) <$> f courseOwnerUpdatedAt
{-# INLINE courseOwnerUpdatedAtL #-}

-- | 'courseCreatedAt' Lens
courseCreatedAtL :: Lens_' Course (Maybe Text)
courseCreatedAtL f Course{..} = (\courseCreatedAt -> Course { courseCreatedAt, ..} ) <$> f courseCreatedAt
{-# INLINE courseCreatedAtL #-}

-- | 'courseUpdatedAt' Lens
courseUpdatedAtL :: Lens_' Course (Maybe Text)
courseUpdatedAtL f Course{..} = (\courseUpdatedAt -> Course { courseUpdatedAt, ..} ) <$> f courseUpdatedAt
{-# INLINE courseUpdatedAtL #-}

-- | 'courseName' Lens
courseNameL :: Lens_' Course (Maybe A.Value)
courseNameL f Course{..} = (\courseName -> Course { courseName, ..} ) <$> f courseName
{-# INLINE courseNameL #-}

-- | 'courseLongDescription' Lens
courseLongDescriptionL :: Lens_' Course (Maybe A.Value)
courseLongDescriptionL f Course{..} = (\courseLongDescription -> Course { courseLongDescription, ..} ) <$> f courseLongDescription
{-# INLINE courseLongDescriptionL #-}

-- | 'courseProgram' Lens
courseProgramL :: Lens_' Course (Maybe A.Value)
courseProgramL f Course{..} = (\courseProgram -> Course { courseProgram, ..} ) <$> f courseProgram
{-# INLINE courseProgramL #-}

-- | 'courseYear' Lens
courseYearL :: Lens_' Course (Maybe Text)
courseYearL f Course{..} = (\courseYear -> Course { courseYear, ..} ) <$> f courseYear
{-# INLINE courseYearL #-}

-- | 'courseMonth' Lens
courseMonthL :: Lens_' Course (Maybe Text)
courseMonthL f Course{..} = (\courseMonth -> Course { courseMonth, ..} ) <$> f courseMonth
{-# INLINE courseMonthL #-}



-- * Cv

-- | 'cvId' Lens
cvIdL :: Lens_' Cv (Maybe Text)
cvIdL f Cv{..} = (\cvId -> Cv { cvId, ..} ) <$> f cvId
{-# INLINE cvIdL #-}

-- | 'cvUserId' Lens
cvUserIdL :: Lens_' Cv (Maybe Text)
cvUserIdL f Cv{..} = (\cvUserId -> Cv { cvUserId, ..} ) <$> f cvUserId
{-# INLINE cvUserIdL #-}

-- | 'cvCompanyId' Lens
cvCompanyIdL :: Lens_' Cv (Maybe Text)
cvCompanyIdL f Cv{..} = (\cvCompanyId -> Cv { cvCompanyId, ..} ) <$> f cvCompanyId
{-# INLINE cvCompanyIdL #-}

-- | 'cvName' Lens
cvNameL :: Lens_' Cv (Maybe Text)
cvNameL f Cv{..} = (\cvName -> Cv { cvName, ..} ) <$> f cvName
{-# INLINE cvNameL #-}

-- | 'cvTitle' Lens
cvTitleL :: Lens_' Cv (Maybe A.Value)
cvTitleL f Cv{..} = (\cvTitle -> Cv { cvTitle, ..} ) <$> f cvTitle
{-# INLINE cvTitleL #-}

-- | 'cvEmail' Lens
cvEmailL :: Lens_' Cv (Maybe Text)
cvEmailL f Cv{..} = (\cvEmail -> Cv { cvEmail, ..} ) <$> f cvEmail
{-# INLINE cvEmailL #-}

-- | 'cvBornDay' Lens
cvBornDayL :: Lens_' Cv (Maybe Int)
cvBornDayL f Cv{..} = (\cvBornDay -> Cv { cvBornDay, ..} ) <$> f cvBornDay
{-# INLINE cvBornDayL #-}

-- | 'cvBornMonth' Lens
cvBornMonthL :: Lens_' Cv (Maybe Int)
cvBornMonthL f Cv{..} = (\cvBornMonth -> Cv { cvBornMonth, ..} ) <$> f cvBornMonth
{-# INLINE cvBornMonthL #-}

-- | 'cvBornYear' Lens
cvBornYearL :: Lens_' Cv (Maybe Int)
cvBornYearL f Cv{..} = (\cvBornYear -> Cv { cvBornYear, ..} ) <$> f cvBornYear
{-# INLINE cvBornYearL #-}

-- | 'cvNationality' Lens
cvNationalityL :: Lens_' Cv (Maybe A.Value)
cvNationalityL f Cv{..} = (\cvNationality -> Cv { cvNationality, ..} ) <$> f cvNationality
{-# INLINE cvNationalityL #-}

-- | 'cvPlaceOfResidence' Lens
cvPlaceOfResidenceL :: Lens_' Cv (Maybe A.Value)
cvPlaceOfResidenceL f Cv{..} = (\cvPlaceOfResidence -> Cv { cvPlaceOfResidence, ..} ) <$> f cvPlaceOfResidence
{-# INLINE cvPlaceOfResidenceL #-}

-- | 'cvEducations' Lens
cvEducationsL :: Lens_' Cv (Maybe [Education])
cvEducationsL f Cv{..} = (\cvEducations -> Cv { cvEducations, ..} ) <$> f cvEducations
{-# INLINE cvEducationsL #-}

-- | 'cvKeyQualifications' Lens
cvKeyQualificationsL :: Lens_' Cv (Maybe [KeyQualification])
cvKeyQualificationsL f Cv{..} = (\cvKeyQualifications -> Cv { cvKeyQualifications, ..} ) <$> f cvKeyQualifications
{-# INLINE cvKeyQualificationsL #-}

-- | 'cvProjectExperiences' Lens
cvProjectExperiencesL :: Lens_' Cv (Maybe [ProjectExperience])
cvProjectExperiencesL f Cv{..} = (\cvProjectExperiences -> Cv { cvProjectExperiences, ..} ) <$> f cvProjectExperiences
{-# INLINE cvProjectExperiencesL #-}

-- | 'cvWorkExperiences' Lens
cvWorkExperiencesL :: Lens_' Cv (Maybe [WorkExperience])
cvWorkExperiencesL f Cv{..} = (\cvWorkExperiences -> Cv { cvWorkExperiences, ..} ) <$> f cvWorkExperiences
{-# INLINE cvWorkExperiencesL #-}

-- | 'cvLanguages' Lens
cvLanguagesL :: Lens_' Cv (Maybe [Language])
cvLanguagesL f Cv{..} = (\cvLanguages -> Cv { cvLanguages, ..} ) <$> f cvLanguages
{-# INLINE cvLanguagesL #-}

-- | 'cvTechnologies' Lens
cvTechnologiesL :: Lens_' Cv (Maybe [Technology])
cvTechnologiesL f Cv{..} = (\cvTechnologies -> Cv { cvTechnologies, ..} ) <$> f cvTechnologies
{-# INLINE cvTechnologiesL #-}

-- | 'cvCertifications' Lens
cvCertificationsL :: Lens_' Cv (Maybe [Certification])
cvCertificationsL f Cv{..} = (\cvCertifications -> Cv { cvCertifications, ..} ) <$> f cvCertifications
{-# INLINE cvCertificationsL #-}

-- | 'cvCourses' Lens
cvCoursesL :: Lens_' Cv (Maybe [Course])
cvCoursesL f Cv{..} = (\cvCourses -> Cv { cvCourses, ..} ) <$> f cvCourses
{-# INLINE cvCoursesL #-}

-- | 'cvPresentations' Lens
cvPresentationsL :: Lens_' Cv (Maybe [Presentation])
cvPresentationsL f Cv{..} = (\cvPresentations -> Cv { cvPresentations, ..} ) <$> f cvPresentations
{-# INLINE cvPresentationsL #-}

-- | 'cvRecommendations' Lens
cvRecommendationsL :: Lens_' Cv (Maybe [Recommendation])
cvRecommendationsL f Cv{..} = (\cvRecommendations -> Cv { cvRecommendations, ..} ) <$> f cvRecommendations
{-# INLINE cvRecommendationsL #-}

-- | 'cvPositions' Lens
cvPositionsL :: Lens_' Cv (Maybe [Position])
cvPositionsL f Cv{..} = (\cvPositions -> Cv { cvPositions, ..} ) <$> f cvPositions
{-# INLINE cvPositionsL #-}

-- | 'cvImage' Lens
cvImageL :: Lens_' Cv (Maybe UserImage)
cvImageL f Cv{..} = (\cvImage -> Cv { cvImage, ..} ) <$> f cvImage
{-# INLINE cvImageL #-}



-- * CvList

-- | 'cvListTotal' Lens
cvListTotalL :: Lens_' CvList (Double)
cvListTotalL f CvList{..} = (\cvListTotal -> CvList { cvListTotal, ..} ) <$> f cvListTotal
{-# INLINE cvListTotalL #-}

-- | 'cvListCvs' Lens
cvListCvsL :: Lens_' CvList ([CvListEntry])
cvListCvsL f CvList{..} = (\cvListCvs -> CvList { cvListCvs, ..} ) <$> f cvListCvs
{-# INLINE cvListCvsL #-}



-- * CvListEntry

-- | 'cvListEntryPreviewUrl' Lens
cvListEntryPreviewUrlL :: Lens_' CvListEntry (Text)
cvListEntryPreviewUrlL f CvListEntry{..} = (\cvListEntryPreviewUrl -> CvListEntry { cvListEntryPreviewUrl, ..} ) <$> f cvListEntryPreviewUrl
{-# INLINE cvListEntryPreviewUrlL #-}

-- | 'cvListEntryCv' Lens
cvListEntryCvL :: Lens_' CvListEntry (CvSummary)
cvListEntryCvL f CvListEntry{..} = (\cvListEntryCv -> CvListEntry { cvListEntryCv, ..} ) <$> f cvListEntryCv
{-# INLINE cvListEntryCvL #-}



-- * CvSection

-- | 'cvSectionKeyQualification' Lens
cvSectionKeyQualificationL :: Lens_' CvSection (Maybe KeyQualification)
cvSectionKeyQualificationL f CvSection{..} = (\cvSectionKeyQualification -> CvSection { cvSectionKeyQualification, ..} ) <$> f cvSectionKeyQualification
{-# INLINE cvSectionKeyQualificationL #-}

-- | 'cvSectionEducation' Lens
cvSectionEducationL :: Lens_' CvSection (Maybe Education)
cvSectionEducationL f CvSection{..} = (\cvSectionEducation -> CvSection { cvSectionEducation, ..} ) <$> f cvSectionEducation
{-# INLINE cvSectionEducationL #-}

-- | 'cvSectionWorkExperience' Lens
cvSectionWorkExperienceL :: Lens_' CvSection (Maybe WorkExperience)
cvSectionWorkExperienceL f CvSection{..} = (\cvSectionWorkExperience -> CvSection { cvSectionWorkExperience, ..} ) <$> f cvSectionWorkExperience
{-# INLINE cvSectionWorkExperienceL #-}



-- * CvSectionProperties

-- | 'cvSectionPropertiesOrder' Lens
cvSectionPropertiesOrderL :: Lens_' CvSectionProperties (Maybe Int)
cvSectionPropertiesOrderL f CvSectionProperties{..} = (\cvSectionPropertiesOrder -> CvSectionProperties { cvSectionPropertiesOrder, ..} ) <$> f cvSectionPropertiesOrder
{-# INLINE cvSectionPropertiesOrderL #-}

-- | 'cvSectionPropertiesStarred' Lens
cvSectionPropertiesStarredL :: Lens_' CvSectionProperties (Maybe Bool)
cvSectionPropertiesStarredL f CvSectionProperties{..} = (\cvSectionPropertiesStarred -> CvSectionProperties { cvSectionPropertiesStarred, ..} ) <$> f cvSectionPropertiesStarred
{-# INLINE cvSectionPropertiesStarredL #-}

-- | 'cvSectionPropertiesDisabled' Lens
cvSectionPropertiesDisabledL :: Lens_' CvSectionProperties (Maybe Bool)
cvSectionPropertiesDisabledL f CvSectionProperties{..} = (\cvSectionPropertiesDisabled -> CvSectionProperties { cvSectionPropertiesDisabled, ..} ) <$> f cvSectionPropertiesDisabled
{-# INLINE cvSectionPropertiesDisabledL #-}

-- | 'cvSectionPropertiesVersion' Lens
cvSectionPropertiesVersionL :: Lens_' CvSectionProperties (Maybe Int)
cvSectionPropertiesVersionL f CvSectionProperties{..} = (\cvSectionPropertiesVersion -> CvSectionProperties { cvSectionPropertiesVersion, ..} ) <$> f cvSectionPropertiesVersion
{-# INLINE cvSectionPropertiesVersionL #-}

-- | 'cvSectionPropertiesExternalUniqueId' Lens
cvSectionPropertiesExternalUniqueIdL :: Lens_' CvSectionProperties (Maybe Text)
cvSectionPropertiesExternalUniqueIdL f CvSectionProperties{..} = (\cvSectionPropertiesExternalUniqueId -> CvSectionProperties { cvSectionPropertiesExternalUniqueId, ..} ) <$> f cvSectionPropertiesExternalUniqueId
{-# INLINE cvSectionPropertiesExternalUniqueIdL #-}

-- | 'cvSectionPropertiesOwnerUpdatedAt' Lens
cvSectionPropertiesOwnerUpdatedAtL :: Lens_' CvSectionProperties (Maybe Text)
cvSectionPropertiesOwnerUpdatedAtL f CvSectionProperties{..} = (\cvSectionPropertiesOwnerUpdatedAt -> CvSectionProperties { cvSectionPropertiesOwnerUpdatedAt, ..} ) <$> f cvSectionPropertiesOwnerUpdatedAt
{-# INLINE cvSectionPropertiesOwnerUpdatedAtL #-}

-- | 'cvSectionPropertiesCreatedAt' Lens
cvSectionPropertiesCreatedAtL :: Lens_' CvSectionProperties (Maybe Text)
cvSectionPropertiesCreatedAtL f CvSectionProperties{..} = (\cvSectionPropertiesCreatedAt -> CvSectionProperties { cvSectionPropertiesCreatedAt, ..} ) <$> f cvSectionPropertiesCreatedAt
{-# INLINE cvSectionPropertiesCreatedAtL #-}

-- | 'cvSectionPropertiesUpdatedAt' Lens
cvSectionPropertiesUpdatedAtL :: Lens_' CvSectionProperties (Maybe Text)
cvSectionPropertiesUpdatedAtL f CvSectionProperties{..} = (\cvSectionPropertiesUpdatedAt -> CvSectionProperties { cvSectionPropertiesUpdatedAt, ..} ) <$> f cvSectionPropertiesUpdatedAt
{-# INLINE cvSectionPropertiesUpdatedAtL #-}



-- * CvSummary

-- | 'cvSummaryId' Lens
cvSummaryIdL :: Lens_' CvSummary (Text)
cvSummaryIdL f CvSummary{..} = (\cvSummaryId -> CvSummary { cvSummaryId, ..} ) <$> f cvSummaryId
{-# INLINE cvSummaryIdL #-}

-- | 'cvSummaryUserId' Lens
cvSummaryUserIdL :: Lens_' CvSummary (Maybe Text)
cvSummaryUserIdL f CvSummary{..} = (\cvSummaryUserId -> CvSummary { cvSummaryUserId, ..} ) <$> f cvSummaryUserId
{-# INLINE cvSummaryUserIdL #-}

-- | 'cvSummaryName' Lens
cvSummaryNameL :: Lens_' CvSummary (Maybe Text)
cvSummaryNameL f CvSummary{..} = (\cvSummaryName -> CvSummary { cvSummaryName, ..} ) <$> f cvSummaryName
{-# INLINE cvSummaryNameL #-}

-- | 'cvSummaryImage' Lens
cvSummaryImageL :: Lens_' CvSummary (Maybe A.Value)
cvSummaryImageL f CvSummary{..} = (\cvSummaryImage -> CvSummary { cvSummaryImage, ..} ) <$> f cvSummaryImage
{-# INLINE cvSummaryImageL #-}

-- | 'cvSummaryTitle' Lens
cvSummaryTitleL :: Lens_' CvSummary (Maybe Text)
cvSummaryTitleL f CvSummary{..} = (\cvSummaryTitle -> CvSummary { cvSummaryTitle, ..} ) <$> f cvSummaryTitle
{-# INLINE cvSummaryTitleL #-}

-- | 'cvSummaryTitles' Lens
cvSummaryTitlesL :: Lens_' CvSummary (Maybe A.Value)
cvSummaryTitlesL f CvSummary{..} = (\cvSummaryTitles -> CvSummary { cvSummaryTitles, ..} ) <$> f cvSummaryTitles
{-# INLINE cvSummaryTitlesL #-}

-- | 'cvSummaryEmail' Lens
cvSummaryEmailL :: Lens_' CvSummary (Maybe Text)
cvSummaryEmailL f CvSummary{..} = (\cvSummaryEmail -> CvSummary { cvSummaryEmail, ..} ) <$> f cvSummaryEmail
{-# INLINE cvSummaryEmailL #-}

-- | 'cvSummaryCompanyId' Lens
cvSummaryCompanyIdL :: Lens_' CvSummary (Maybe Text)
cvSummaryCompanyIdL f CvSummary{..} = (\cvSummaryCompanyId -> CvSummary { cvSummaryCompanyId, ..} ) <$> f cvSummaryCompanyId
{-# INLINE cvSummaryCompanyIdL #-}

-- | 'cvSummaryUpdatedAt' Lens
cvSummaryUpdatedAtL :: Lens_' CvSummary (Maybe Text)
cvSummaryUpdatedAtL f CvSummary{..} = (\cvSummaryUpdatedAt -> CvSummary { cvSummaryUpdatedAt, ..} ) <$> f cvSummaryUpdatedAt
{-# INLINE cvSummaryUpdatedAtL #-}

-- | 'cvSummaryOwnerUpdatedAt' Lens
cvSummaryOwnerUpdatedAtL :: Lens_' CvSummary (Maybe Text)
cvSummaryOwnerUpdatedAtL f CvSummary{..} = (\cvSummaryOwnerUpdatedAt -> CvSummary { cvSummaryOwnerUpdatedAt, ..} ) <$> f cvSummaryOwnerUpdatedAt
{-# INLINE cvSummaryOwnerUpdatedAtL #-}

-- | 'cvSummaryCountryCode' Lens
cvSummaryCountryCodeL :: Lens_' CvSummary (Maybe Text)
cvSummaryCountryCodeL f CvSummary{..} = (\cvSummaryCountryCode -> CvSummary { cvSummaryCountryCode, ..} ) <$> f cvSummaryCountryCode
{-# INLINE cvSummaryCountryCodeL #-}

-- | 'cvSummaryLanguageCode' Lens
cvSummaryLanguageCodeL :: Lens_' CvSummary (Maybe Text)
cvSummaryLanguageCodeL f CvSummary{..} = (\cvSummaryLanguageCode -> CvSummary { cvSummaryLanguageCode, ..} ) <$> f cvSummaryLanguageCode
{-# INLINE cvSummaryLanguageCodeL #-}

-- | 'cvSummaryLanguageCodes' Lens
cvSummaryLanguageCodesL :: Lens_' CvSummary (Maybe [Text])
cvSummaryLanguageCodesL f CvSummary{..} = (\cvSummaryLanguageCodes -> CvSummary { cvSummaryLanguageCodes, ..} ) <$> f cvSummaryLanguageCodes
{-# INLINE cvSummaryLanguageCodesL #-}



-- * Education

-- | 'educationOrder' Lens
educationOrderL :: Lens_' Education (Maybe Int)
educationOrderL f Education{..} = (\educationOrder -> Education { educationOrder, ..} ) <$> f educationOrder
{-# INLINE educationOrderL #-}

-- | 'educationStarred' Lens
educationStarredL :: Lens_' Education (Maybe Bool)
educationStarredL f Education{..} = (\educationStarred -> Education { educationStarred, ..} ) <$> f educationStarred
{-# INLINE educationStarredL #-}

-- | 'educationDisabled' Lens
educationDisabledL :: Lens_' Education (Maybe Bool)
educationDisabledL f Education{..} = (\educationDisabled -> Education { educationDisabled, ..} ) <$> f educationDisabled
{-# INLINE educationDisabledL #-}

-- | 'educationVersion' Lens
educationVersionL :: Lens_' Education (Maybe Int)
educationVersionL f Education{..} = (\educationVersion -> Education { educationVersion, ..} ) <$> f educationVersion
{-# INLINE educationVersionL #-}

-- | 'educationExternalUniqueId' Lens
educationExternalUniqueIdL :: Lens_' Education (Maybe Text)
educationExternalUniqueIdL f Education{..} = (\educationExternalUniqueId -> Education { educationExternalUniqueId, ..} ) <$> f educationExternalUniqueId
{-# INLINE educationExternalUniqueIdL #-}

-- | 'educationOwnerUpdatedAt' Lens
educationOwnerUpdatedAtL :: Lens_' Education (Maybe Text)
educationOwnerUpdatedAtL f Education{..} = (\educationOwnerUpdatedAt -> Education { educationOwnerUpdatedAt, ..} ) <$> f educationOwnerUpdatedAt
{-# INLINE educationOwnerUpdatedAtL #-}

-- | 'educationCreatedAt' Lens
educationCreatedAtL :: Lens_' Education (Maybe Text)
educationCreatedAtL f Education{..} = (\educationCreatedAt -> Education { educationCreatedAt, ..} ) <$> f educationCreatedAt
{-# INLINE educationCreatedAtL #-}

-- | 'educationUpdatedAt' Lens
educationUpdatedAtL :: Lens_' Education (Maybe Text)
educationUpdatedAtL f Education{..} = (\educationUpdatedAt -> Education { educationUpdatedAt, ..} ) <$> f educationUpdatedAt
{-# INLINE educationUpdatedAtL #-}

-- | 'educationDegree' Lens
educationDegreeL :: Lens_' Education (Maybe A.Value)
educationDegreeL f Education{..} = (\educationDegree -> Education { educationDegree, ..} ) <$> f educationDegree
{-# INLINE educationDegreeL #-}

-- | 'educationDescription' Lens
educationDescriptionL :: Lens_' Education (Maybe A.Value)
educationDescriptionL f Education{..} = (\educationDescription -> Education { educationDescription, ..} ) <$> f educationDescription
{-# INLINE educationDescriptionL #-}

-- | 'educationYearFrom' Lens
educationYearFromL :: Lens_' Education (Maybe Text)
educationYearFromL f Education{..} = (\educationYearFrom -> Education { educationYearFrom, ..} ) <$> f educationYearFrom
{-# INLINE educationYearFromL #-}

-- | 'educationMonthFrom' Lens
educationMonthFromL :: Lens_' Education (Maybe Text)
educationMonthFromL f Education{..} = (\educationMonthFrom -> Education { educationMonthFrom, ..} ) <$> f educationMonthFrom
{-# INLINE educationMonthFromL #-}

-- | 'educationYearTo' Lens
educationYearToL :: Lens_' Education (Maybe Text)
educationYearToL f Education{..} = (\educationYearTo -> Education { educationYearTo, ..} ) <$> f educationYearTo
{-# INLINE educationYearToL #-}

-- | 'educationMonthTo' Lens
educationMonthToL :: Lens_' Education (Maybe Text)
educationMonthToL f Education{..} = (\educationMonthTo -> Education { educationMonthTo, ..} ) <$> f educationMonthTo
{-# INLINE educationMonthToL #-}

-- | 'educationSchool' Lens
educationSchoolL :: Lens_' Education (Maybe A.Value)
educationSchoolL f Education{..} = (\educationSchool -> Education { educationSchool, ..} ) <$> f educationSchool
{-# INLINE educationSchoolL #-}



-- * ImageUrl

-- | 'imageUrlUrl' Lens
imageUrlUrlL :: Lens_' ImageUrl (Maybe Text)
imageUrlUrlL f ImageUrl{..} = (\imageUrlUrl -> ImageUrl { imageUrlUrl, ..} ) <$> f imageUrlUrl
{-# INLINE imageUrlUrlL #-}



-- * KeyQualification

-- | 'keyQualificationOrder' Lens
keyQualificationOrderL :: Lens_' KeyQualification (Maybe Int)
keyQualificationOrderL f KeyQualification{..} = (\keyQualificationOrder -> KeyQualification { keyQualificationOrder, ..} ) <$> f keyQualificationOrder
{-# INLINE keyQualificationOrderL #-}

-- | 'keyQualificationStarred' Lens
keyQualificationStarredL :: Lens_' KeyQualification (Maybe Bool)
keyQualificationStarredL f KeyQualification{..} = (\keyQualificationStarred -> KeyQualification { keyQualificationStarred, ..} ) <$> f keyQualificationStarred
{-# INLINE keyQualificationStarredL #-}

-- | 'keyQualificationDisabled' Lens
keyQualificationDisabledL :: Lens_' KeyQualification (Maybe Bool)
keyQualificationDisabledL f KeyQualification{..} = (\keyQualificationDisabled -> KeyQualification { keyQualificationDisabled, ..} ) <$> f keyQualificationDisabled
{-# INLINE keyQualificationDisabledL #-}

-- | 'keyQualificationVersion' Lens
keyQualificationVersionL :: Lens_' KeyQualification (Maybe Int)
keyQualificationVersionL f KeyQualification{..} = (\keyQualificationVersion -> KeyQualification { keyQualificationVersion, ..} ) <$> f keyQualificationVersion
{-# INLINE keyQualificationVersionL #-}

-- | 'keyQualificationExternalUniqueId' Lens
keyQualificationExternalUniqueIdL :: Lens_' KeyQualification (Maybe Text)
keyQualificationExternalUniqueIdL f KeyQualification{..} = (\keyQualificationExternalUniqueId -> KeyQualification { keyQualificationExternalUniqueId, ..} ) <$> f keyQualificationExternalUniqueId
{-# INLINE keyQualificationExternalUniqueIdL #-}

-- | 'keyQualificationOwnerUpdatedAt' Lens
keyQualificationOwnerUpdatedAtL :: Lens_' KeyQualification (Maybe Text)
keyQualificationOwnerUpdatedAtL f KeyQualification{..} = (\keyQualificationOwnerUpdatedAt -> KeyQualification { keyQualificationOwnerUpdatedAt, ..} ) <$> f keyQualificationOwnerUpdatedAt
{-# INLINE keyQualificationOwnerUpdatedAtL #-}

-- | 'keyQualificationCreatedAt' Lens
keyQualificationCreatedAtL :: Lens_' KeyQualification (Maybe Text)
keyQualificationCreatedAtL f KeyQualification{..} = (\keyQualificationCreatedAt -> KeyQualification { keyQualificationCreatedAt, ..} ) <$> f keyQualificationCreatedAt
{-# INLINE keyQualificationCreatedAtL #-}

-- | 'keyQualificationUpdatedAt' Lens
keyQualificationUpdatedAtL :: Lens_' KeyQualification (Maybe Text)
keyQualificationUpdatedAtL f KeyQualification{..} = (\keyQualificationUpdatedAt -> KeyQualification { keyQualificationUpdatedAt, ..} ) <$> f keyQualificationUpdatedAt
{-# INLINE keyQualificationUpdatedAtL #-}

-- | 'keyQualificationRecentlyAdded' Lens
keyQualificationRecentlyAddedL :: Lens_' KeyQualification (Maybe Bool)
keyQualificationRecentlyAddedL f KeyQualification{..} = (\keyQualificationRecentlyAdded -> KeyQualification { keyQualificationRecentlyAdded, ..} ) <$> f keyQualificationRecentlyAdded
{-# INLINE keyQualificationRecentlyAddedL #-}

-- | 'keyQualificationLabel' Lens
keyQualificationLabelL :: Lens_' KeyQualification (Maybe A.Value)
keyQualificationLabelL f KeyQualification{..} = (\keyQualificationLabel -> KeyQualification { keyQualificationLabel, ..} ) <$> f keyQualificationLabel
{-# INLINE keyQualificationLabelL #-}

-- | 'keyQualificationLongDescription' Lens
keyQualificationLongDescriptionL :: Lens_' KeyQualification (Maybe A.Value)
keyQualificationLongDescriptionL f KeyQualification{..} = (\keyQualificationLongDescription -> KeyQualification { keyQualificationLongDescription, ..} ) <$> f keyQualificationLongDescription
{-# INLINE keyQualificationLongDescriptionL #-}

-- | 'keyQualificationTagLine' Lens
keyQualificationTagLineL :: Lens_' KeyQualification (Maybe A.Value)
keyQualificationTagLineL f KeyQualification{..} = (\keyQualificationTagLine -> KeyQualification { keyQualificationTagLine, ..} ) <$> f keyQualificationTagLine
{-# INLINE keyQualificationTagLineL #-}



-- * Language

-- | 'languageOrder' Lens
languageOrderL :: Lens_' Language (Maybe Int)
languageOrderL f Language{..} = (\languageOrder -> Language { languageOrder, ..} ) <$> f languageOrder
{-# INLINE languageOrderL #-}

-- | 'languageStarred' Lens
languageStarredL :: Lens_' Language (Maybe Bool)
languageStarredL f Language{..} = (\languageStarred -> Language { languageStarred, ..} ) <$> f languageStarred
{-# INLINE languageStarredL #-}

-- | 'languageDisabled' Lens
languageDisabledL :: Lens_' Language (Maybe Bool)
languageDisabledL f Language{..} = (\languageDisabled -> Language { languageDisabled, ..} ) <$> f languageDisabled
{-# INLINE languageDisabledL #-}

-- | 'languageVersion' Lens
languageVersionL :: Lens_' Language (Maybe Int)
languageVersionL f Language{..} = (\languageVersion -> Language { languageVersion, ..} ) <$> f languageVersion
{-# INLINE languageVersionL #-}

-- | 'languageExternalUniqueId' Lens
languageExternalUniqueIdL :: Lens_' Language (Maybe Text)
languageExternalUniqueIdL f Language{..} = (\languageExternalUniqueId -> Language { languageExternalUniqueId, ..} ) <$> f languageExternalUniqueId
{-# INLINE languageExternalUniqueIdL #-}

-- | 'languageOwnerUpdatedAt' Lens
languageOwnerUpdatedAtL :: Lens_' Language (Maybe Text)
languageOwnerUpdatedAtL f Language{..} = (\languageOwnerUpdatedAt -> Language { languageOwnerUpdatedAt, ..} ) <$> f languageOwnerUpdatedAt
{-# INLINE languageOwnerUpdatedAtL #-}

-- | 'languageCreatedAt' Lens
languageCreatedAtL :: Lens_' Language (Maybe Text)
languageCreatedAtL f Language{..} = (\languageCreatedAt -> Language { languageCreatedAt, ..} ) <$> f languageCreatedAt
{-# INLINE languageCreatedAtL #-}

-- | 'languageUpdatedAt' Lens
languageUpdatedAtL :: Lens_' Language (Maybe Text)
languageUpdatedAtL f Language{..} = (\languageUpdatedAt -> Language { languageUpdatedAt, ..} ) <$> f languageUpdatedAt
{-# INLINE languageUpdatedAtL #-}

-- | 'languageLevel' Lens
languageLevelL :: Lens_' Language (Maybe A.Value)
languageLevelL f Language{..} = (\languageLevel -> Language { languageLevel, ..} ) <$> f languageLevel
{-# INLINE languageLevelL #-}

-- | 'languageName' Lens
languageNameL :: Lens_' Language (Maybe A.Value)
languageNameL f Language{..} = (\languageName -> Language { languageName, ..} ) <$> f languageName
{-# INLINE languageNameL #-}



-- * Office

-- | 'officeId' Lens
officeIdL :: Lens_' Office (Text)
officeIdL f Office{..} = (\officeId -> Office { officeId, ..} ) <$> f officeId
{-# INLINE officeIdL #-}

-- | 'officeName' Lens
officeNameL :: Lens_' Office (Text)
officeNameL f Office{..} = (\officeName -> Office { officeName, ..} ) <$> f officeName
{-# INLINE officeNameL #-}



-- * Position

-- | 'positionOrder' Lens
positionOrderL :: Lens_' Position (Maybe Int)
positionOrderL f Position{..} = (\positionOrder -> Position { positionOrder, ..} ) <$> f positionOrder
{-# INLINE positionOrderL #-}

-- | 'positionStarred' Lens
positionStarredL :: Lens_' Position (Maybe Bool)
positionStarredL f Position{..} = (\positionStarred -> Position { positionStarred, ..} ) <$> f positionStarred
{-# INLINE positionStarredL #-}

-- | 'positionDisabled' Lens
positionDisabledL :: Lens_' Position (Maybe Bool)
positionDisabledL f Position{..} = (\positionDisabled -> Position { positionDisabled, ..} ) <$> f positionDisabled
{-# INLINE positionDisabledL #-}

-- | 'positionVersion' Lens
positionVersionL :: Lens_' Position (Maybe Int)
positionVersionL f Position{..} = (\positionVersion -> Position { positionVersion, ..} ) <$> f positionVersion
{-# INLINE positionVersionL #-}

-- | 'positionExternalUniqueId' Lens
positionExternalUniqueIdL :: Lens_' Position (Maybe Text)
positionExternalUniqueIdL f Position{..} = (\positionExternalUniqueId -> Position { positionExternalUniqueId, ..} ) <$> f positionExternalUniqueId
{-# INLINE positionExternalUniqueIdL #-}

-- | 'positionOwnerUpdatedAt' Lens
positionOwnerUpdatedAtL :: Lens_' Position (Maybe Text)
positionOwnerUpdatedAtL f Position{..} = (\positionOwnerUpdatedAt -> Position { positionOwnerUpdatedAt, ..} ) <$> f positionOwnerUpdatedAt
{-# INLINE positionOwnerUpdatedAtL #-}

-- | 'positionCreatedAt' Lens
positionCreatedAtL :: Lens_' Position (Maybe Text)
positionCreatedAtL f Position{..} = (\positionCreatedAt -> Position { positionCreatedAt, ..} ) <$> f positionCreatedAt
{-# INLINE positionCreatedAtL #-}

-- | 'positionUpdatedAt' Lens
positionUpdatedAtL :: Lens_' Position (Maybe Text)
positionUpdatedAtL f Position{..} = (\positionUpdatedAt -> Position { positionUpdatedAt, ..} ) <$> f positionUpdatedAt
{-# INLINE positionUpdatedAtL #-}

-- | 'positionName' Lens
positionNameL :: Lens_' Position (Maybe A.Value)
positionNameL f Position{..} = (\positionName -> Position { positionName, ..} ) <$> f positionName
{-# INLINE positionNameL #-}

-- | 'positionDescription' Lens
positionDescriptionL :: Lens_' Position (Maybe A.Value)
positionDescriptionL f Position{..} = (\positionDescription -> Position { positionDescription, ..} ) <$> f positionDescription
{-# INLINE positionDescriptionL #-}

-- | 'positionYearFrom' Lens
positionYearFromL :: Lens_' Position (Maybe Text)
positionYearFromL f Position{..} = (\positionYearFrom -> Position { positionYearFrom, ..} ) <$> f positionYearFrom
{-# INLINE positionYearFromL #-}

-- | 'positionYearTo' Lens
positionYearToL :: Lens_' Position (Maybe Text)
positionYearToL f Position{..} = (\positionYearTo -> Position { positionYearTo, ..} ) <$> f positionYearTo
{-# INLINE positionYearToL #-}



-- * Presentation

-- | 'presentationOrder' Lens
presentationOrderL :: Lens_' Presentation (Maybe Int)
presentationOrderL f Presentation{..} = (\presentationOrder -> Presentation { presentationOrder, ..} ) <$> f presentationOrder
{-# INLINE presentationOrderL #-}

-- | 'presentationStarred' Lens
presentationStarredL :: Lens_' Presentation (Maybe Bool)
presentationStarredL f Presentation{..} = (\presentationStarred -> Presentation { presentationStarred, ..} ) <$> f presentationStarred
{-# INLINE presentationStarredL #-}

-- | 'presentationDisabled' Lens
presentationDisabledL :: Lens_' Presentation (Maybe Bool)
presentationDisabledL f Presentation{..} = (\presentationDisabled -> Presentation { presentationDisabled, ..} ) <$> f presentationDisabled
{-# INLINE presentationDisabledL #-}

-- | 'presentationVersion' Lens
presentationVersionL :: Lens_' Presentation (Maybe Int)
presentationVersionL f Presentation{..} = (\presentationVersion -> Presentation { presentationVersion, ..} ) <$> f presentationVersion
{-# INLINE presentationVersionL #-}

-- | 'presentationExternalUniqueId' Lens
presentationExternalUniqueIdL :: Lens_' Presentation (Maybe Text)
presentationExternalUniqueIdL f Presentation{..} = (\presentationExternalUniqueId -> Presentation { presentationExternalUniqueId, ..} ) <$> f presentationExternalUniqueId
{-# INLINE presentationExternalUniqueIdL #-}

-- | 'presentationOwnerUpdatedAt' Lens
presentationOwnerUpdatedAtL :: Lens_' Presentation (Maybe Text)
presentationOwnerUpdatedAtL f Presentation{..} = (\presentationOwnerUpdatedAt -> Presentation { presentationOwnerUpdatedAt, ..} ) <$> f presentationOwnerUpdatedAt
{-# INLINE presentationOwnerUpdatedAtL #-}

-- | 'presentationCreatedAt' Lens
presentationCreatedAtL :: Lens_' Presentation (Maybe Text)
presentationCreatedAtL f Presentation{..} = (\presentationCreatedAt -> Presentation { presentationCreatedAt, ..} ) <$> f presentationCreatedAt
{-# INLINE presentationCreatedAtL #-}

-- | 'presentationUpdatedAt' Lens
presentationUpdatedAtL :: Lens_' Presentation (Maybe Text)
presentationUpdatedAtL f Presentation{..} = (\presentationUpdatedAt -> Presentation { presentationUpdatedAt, ..} ) <$> f presentationUpdatedAt
{-# INLINE presentationUpdatedAtL #-}

-- | 'presentationDescription' Lens
presentationDescriptionL :: Lens_' Presentation (Maybe A.Value)
presentationDescriptionL f Presentation{..} = (\presentationDescription -> Presentation { presentationDescription, ..} ) <$> f presentationDescription
{-# INLINE presentationDescriptionL #-}

-- | 'presentationLongDescription' Lens
presentationLongDescriptionL :: Lens_' Presentation (Maybe A.Value)
presentationLongDescriptionL f Presentation{..} = (\presentationLongDescription -> Presentation { presentationLongDescription, ..} ) <$> f presentationLongDescription
{-# INLINE presentationLongDescriptionL #-}

-- | 'presentationYear' Lens
presentationYearL :: Lens_' Presentation (Maybe Text)
presentationYearL f Presentation{..} = (\presentationYear -> Presentation { presentationYear, ..} ) <$> f presentationYear
{-# INLINE presentationYearL #-}

-- | 'presentationMonth' Lens
presentationMonthL :: Lens_' Presentation (Maybe Text)
presentationMonthL f Presentation{..} = (\presentationMonth -> Presentation { presentationMonth, ..} ) <$> f presentationMonth
{-# INLINE presentationMonthL #-}



-- * ProjectExperience

-- | 'projectExperienceOrder' Lens
projectExperienceOrderL :: Lens_' ProjectExperience (Maybe Int)
projectExperienceOrderL f ProjectExperience{..} = (\projectExperienceOrder -> ProjectExperience { projectExperienceOrder, ..} ) <$> f projectExperienceOrder
{-# INLINE projectExperienceOrderL #-}

-- | 'projectExperienceStarred' Lens
projectExperienceStarredL :: Lens_' ProjectExperience (Maybe Bool)
projectExperienceStarredL f ProjectExperience{..} = (\projectExperienceStarred -> ProjectExperience { projectExperienceStarred, ..} ) <$> f projectExperienceStarred
{-# INLINE projectExperienceStarredL #-}

-- | 'projectExperienceDisabled' Lens
projectExperienceDisabledL :: Lens_' ProjectExperience (Maybe Bool)
projectExperienceDisabledL f ProjectExperience{..} = (\projectExperienceDisabled -> ProjectExperience { projectExperienceDisabled, ..} ) <$> f projectExperienceDisabled
{-# INLINE projectExperienceDisabledL #-}

-- | 'projectExperienceVersion' Lens
projectExperienceVersionL :: Lens_' ProjectExperience (Maybe Int)
projectExperienceVersionL f ProjectExperience{..} = (\projectExperienceVersion -> ProjectExperience { projectExperienceVersion, ..} ) <$> f projectExperienceVersion
{-# INLINE projectExperienceVersionL #-}

-- | 'projectExperienceExternalUniqueId' Lens
projectExperienceExternalUniqueIdL :: Lens_' ProjectExperience (Maybe Text)
projectExperienceExternalUniqueIdL f ProjectExperience{..} = (\projectExperienceExternalUniqueId -> ProjectExperience { projectExperienceExternalUniqueId, ..} ) <$> f projectExperienceExternalUniqueId
{-# INLINE projectExperienceExternalUniqueIdL #-}

-- | 'projectExperienceOwnerUpdatedAt' Lens
projectExperienceOwnerUpdatedAtL :: Lens_' ProjectExperience (Maybe Text)
projectExperienceOwnerUpdatedAtL f ProjectExperience{..} = (\projectExperienceOwnerUpdatedAt -> ProjectExperience { projectExperienceOwnerUpdatedAt, ..} ) <$> f projectExperienceOwnerUpdatedAt
{-# INLINE projectExperienceOwnerUpdatedAtL #-}

-- | 'projectExperienceCreatedAt' Lens
projectExperienceCreatedAtL :: Lens_' ProjectExperience (Maybe Text)
projectExperienceCreatedAtL f ProjectExperience{..} = (\projectExperienceCreatedAt -> ProjectExperience { projectExperienceCreatedAt, ..} ) <$> f projectExperienceCreatedAt
{-# INLINE projectExperienceCreatedAtL #-}

-- | 'projectExperienceUpdatedAt' Lens
projectExperienceUpdatedAtL :: Lens_' ProjectExperience (Maybe Text)
projectExperienceUpdatedAtL f ProjectExperience{..} = (\projectExperienceUpdatedAt -> ProjectExperience { projectExperienceUpdatedAt, ..} ) <$> f projectExperienceUpdatedAt
{-# INLINE projectExperienceUpdatedAtL #-}

-- | 'projectExperienceAreaAmt' Lens
projectExperienceAreaAmtL :: Lens_' ProjectExperience (Maybe Text)
projectExperienceAreaAmtL f ProjectExperience{..} = (\projectExperienceAreaAmt -> ProjectExperience { projectExperienceAreaAmt, ..} ) <$> f projectExperienceAreaAmt
{-# INLINE projectExperienceAreaAmtL #-}

-- | 'projectExperienceAreaUnit' Lens
projectExperienceAreaUnitL :: Lens_' ProjectExperience (Maybe Text)
projectExperienceAreaUnitL f ProjectExperience{..} = (\projectExperienceAreaUnit -> ProjectExperience { projectExperienceAreaUnit, ..} ) <$> f projectExperienceAreaUnit
{-# INLINE projectExperienceAreaUnitL #-}

-- | 'projectExperienceCustomer' Lens
projectExperienceCustomerL :: Lens_' ProjectExperience (Maybe A.Value)
projectExperienceCustomerL f ProjectExperience{..} = (\projectExperienceCustomer -> ProjectExperience { projectExperienceCustomer, ..} ) <$> f projectExperienceCustomer
{-# INLINE projectExperienceCustomerL #-}

-- | 'projectExperienceCustomerAnonymized' Lens
projectExperienceCustomerAnonymizedL :: Lens_' ProjectExperience (Maybe A.Value)
projectExperienceCustomerAnonymizedL f ProjectExperience{..} = (\projectExperienceCustomerAnonymized -> ProjectExperience { projectExperienceCustomerAnonymized, ..} ) <$> f projectExperienceCustomerAnonymized
{-# INLINE projectExperienceCustomerAnonymizedL #-}

-- | 'projectExperienceCustomerDescription' Lens
projectExperienceCustomerDescriptionL :: Lens_' ProjectExperience (Maybe A.Value)
projectExperienceCustomerDescriptionL f ProjectExperience{..} = (\projectExperienceCustomerDescription -> ProjectExperience { projectExperienceCustomerDescription, ..} ) <$> f projectExperienceCustomerDescription
{-# INLINE projectExperienceCustomerDescriptionL #-}

-- | 'projectExperienceDescription' Lens
projectExperienceDescriptionL :: Lens_' ProjectExperience (Maybe A.Value)
projectExperienceDescriptionL f ProjectExperience{..} = (\projectExperienceDescription -> ProjectExperience { projectExperienceDescription, ..} ) <$> f projectExperienceDescription
{-# INLINE projectExperienceDescriptionL #-}

-- | 'projectExperienceLongDescription' Lens
projectExperienceLongDescriptionL :: Lens_' ProjectExperience (Maybe A.Value)
projectExperienceLongDescriptionL f ProjectExperience{..} = (\projectExperienceLongDescription -> ProjectExperience { projectExperienceLongDescription, ..} ) <$> f projectExperienceLongDescription
{-# INLINE projectExperienceLongDescriptionL #-}

-- | 'projectExperienceIndustry' Lens
projectExperienceIndustryL :: Lens_' ProjectExperience (Maybe A.Value)
projectExperienceIndustryL f ProjectExperience{..} = (\projectExperienceIndustry -> ProjectExperience { projectExperienceIndustry, ..} ) <$> f projectExperienceIndustry
{-# INLINE projectExperienceIndustryL #-}

-- | 'projectExperienceYearFrom' Lens
projectExperienceYearFromL :: Lens_' ProjectExperience (Maybe Text)
projectExperienceYearFromL f ProjectExperience{..} = (\projectExperienceYearFrom -> ProjectExperience { projectExperienceYearFrom, ..} ) <$> f projectExperienceYearFrom
{-# INLINE projectExperienceYearFromL #-}

-- | 'projectExperienceMonthFrom' Lens
projectExperienceMonthFromL :: Lens_' ProjectExperience (Maybe Text)
projectExperienceMonthFromL f ProjectExperience{..} = (\projectExperienceMonthFrom -> ProjectExperience { projectExperienceMonthFrom, ..} ) <$> f projectExperienceMonthFrom
{-# INLINE projectExperienceMonthFromL #-}

-- | 'projectExperienceYearTo' Lens
projectExperienceYearToL :: Lens_' ProjectExperience (Maybe Text)
projectExperienceYearToL f ProjectExperience{..} = (\projectExperienceYearTo -> ProjectExperience { projectExperienceYearTo, ..} ) <$> f projectExperienceYearTo
{-# INLINE projectExperienceYearToL #-}

-- | 'projectExperienceMonthTo' Lens
projectExperienceMonthToL :: Lens_' ProjectExperience (Maybe Text)
projectExperienceMonthToL f ProjectExperience{..} = (\projectExperienceMonthTo -> ProjectExperience { projectExperienceMonthTo, ..} ) <$> f projectExperienceMonthTo
{-# INLINE projectExperienceMonthToL #-}

-- | 'projectExperienceRoles' Lens
projectExperienceRolesL :: Lens_' ProjectExperience (Maybe [ProjectRole])
projectExperienceRolesL f ProjectExperience{..} = (\projectExperienceRoles -> ProjectExperience { projectExperienceRoles, ..} ) <$> f projectExperienceRoles
{-# INLINE projectExperienceRolesL #-}



-- * ProjectRole

-- | 'projectRoleOrder' Lens
projectRoleOrderL :: Lens_' ProjectRole (Maybe Int)
projectRoleOrderL f ProjectRole{..} = (\projectRoleOrder -> ProjectRole { projectRoleOrder, ..} ) <$> f projectRoleOrder
{-# INLINE projectRoleOrderL #-}

-- | 'projectRoleStarred' Lens
projectRoleStarredL :: Lens_' ProjectRole (Maybe Bool)
projectRoleStarredL f ProjectRole{..} = (\projectRoleStarred -> ProjectRole { projectRoleStarred, ..} ) <$> f projectRoleStarred
{-# INLINE projectRoleStarredL #-}

-- | 'projectRoleDisabled' Lens
projectRoleDisabledL :: Lens_' ProjectRole (Maybe Bool)
projectRoleDisabledL f ProjectRole{..} = (\projectRoleDisabled -> ProjectRole { projectRoleDisabled, ..} ) <$> f projectRoleDisabled
{-# INLINE projectRoleDisabledL #-}

-- | 'projectRoleVersion' Lens
projectRoleVersionL :: Lens_' ProjectRole (Maybe Int)
projectRoleVersionL f ProjectRole{..} = (\projectRoleVersion -> ProjectRole { projectRoleVersion, ..} ) <$> f projectRoleVersion
{-# INLINE projectRoleVersionL #-}

-- | 'projectRoleExternalUniqueId' Lens
projectRoleExternalUniqueIdL :: Lens_' ProjectRole (Maybe Text)
projectRoleExternalUniqueIdL f ProjectRole{..} = (\projectRoleExternalUniqueId -> ProjectRole { projectRoleExternalUniqueId, ..} ) <$> f projectRoleExternalUniqueId
{-# INLINE projectRoleExternalUniqueIdL #-}

-- | 'projectRoleOwnerUpdatedAt' Lens
projectRoleOwnerUpdatedAtL :: Lens_' ProjectRole (Maybe Text)
projectRoleOwnerUpdatedAtL f ProjectRole{..} = (\projectRoleOwnerUpdatedAt -> ProjectRole { projectRoleOwnerUpdatedAt, ..} ) <$> f projectRoleOwnerUpdatedAt
{-# INLINE projectRoleOwnerUpdatedAtL #-}

-- | 'projectRoleCreatedAt' Lens
projectRoleCreatedAtL :: Lens_' ProjectRole (Maybe Text)
projectRoleCreatedAtL f ProjectRole{..} = (\projectRoleCreatedAt -> ProjectRole { projectRoleCreatedAt, ..} ) <$> f projectRoleCreatedAt
{-# INLINE projectRoleCreatedAtL #-}

-- | 'projectRoleUpdatedAt' Lens
projectRoleUpdatedAtL :: Lens_' ProjectRole (Maybe Text)
projectRoleUpdatedAtL f ProjectRole{..} = (\projectRoleUpdatedAt -> ProjectRole { projectRoleUpdatedAt, ..} ) <$> f projectRoleUpdatedAt
{-# INLINE projectRoleUpdatedAtL #-}

-- | 'projectRoleCvRoleId' Lens
projectRoleCvRoleIdL :: Lens_' ProjectRole (Maybe Text)
projectRoleCvRoleIdL f ProjectRole{..} = (\projectRoleCvRoleId -> ProjectRole { projectRoleCvRoleId, ..} ) <$> f projectRoleCvRoleId
{-# INLINE projectRoleCvRoleIdL #-}

-- | 'projectRoleDivergedFromMaster' Lens
projectRoleDivergedFromMasterL :: Lens_' ProjectRole (Maybe Bool)
projectRoleDivergedFromMasterL f ProjectRole{..} = (\projectRoleDivergedFromMaster -> ProjectRole { projectRoleDivergedFromMaster, ..} ) <$> f projectRoleDivergedFromMaster
{-# INLINE projectRoleDivergedFromMasterL #-}

-- | 'projectRoleName' Lens
projectRoleNameL :: Lens_' ProjectRole (Maybe A.Value)
projectRoleNameL f ProjectRole{..} = (\projectRoleName -> ProjectRole { projectRoleName, ..} ) <$> f projectRoleName
{-# INLINE projectRoleNameL #-}

-- | 'projectRoleSummary' Lens
projectRoleSummaryL :: Lens_' ProjectRole (Maybe A.Value)
projectRoleSummaryL f ProjectRole{..} = (\projectRoleSummary -> ProjectRole { projectRoleSummary, ..} ) <$> f projectRoleSummary
{-# INLINE projectRoleSummaryL #-}

-- | 'projectRoleLongDescription' Lens
projectRoleLongDescriptionL :: Lens_' ProjectRole (Maybe A.Value)
projectRoleLongDescriptionL f ProjectRole{..} = (\projectRoleLongDescription -> ProjectRole { projectRoleLongDescription, ..} ) <$> f projectRoleLongDescription
{-# INLINE projectRoleLongDescriptionL #-}



-- * Recommendation

-- | 'recommendationOrder' Lens
recommendationOrderL :: Lens_' Recommendation (Maybe Int)
recommendationOrderL f Recommendation{..} = (\recommendationOrder -> Recommendation { recommendationOrder, ..} ) <$> f recommendationOrder
{-# INLINE recommendationOrderL #-}

-- | 'recommendationStarred' Lens
recommendationStarredL :: Lens_' Recommendation (Maybe Bool)
recommendationStarredL f Recommendation{..} = (\recommendationStarred -> Recommendation { recommendationStarred, ..} ) <$> f recommendationStarred
{-# INLINE recommendationStarredL #-}

-- | 'recommendationDisabled' Lens
recommendationDisabledL :: Lens_' Recommendation (Maybe Bool)
recommendationDisabledL f Recommendation{..} = (\recommendationDisabled -> Recommendation { recommendationDisabled, ..} ) <$> f recommendationDisabled
{-# INLINE recommendationDisabledL #-}

-- | 'recommendationVersion' Lens
recommendationVersionL :: Lens_' Recommendation (Maybe Int)
recommendationVersionL f Recommendation{..} = (\recommendationVersion -> Recommendation { recommendationVersion, ..} ) <$> f recommendationVersion
{-# INLINE recommendationVersionL #-}

-- | 'recommendationExternalUniqueId' Lens
recommendationExternalUniqueIdL :: Lens_' Recommendation (Maybe Text)
recommendationExternalUniqueIdL f Recommendation{..} = (\recommendationExternalUniqueId -> Recommendation { recommendationExternalUniqueId, ..} ) <$> f recommendationExternalUniqueId
{-# INLINE recommendationExternalUniqueIdL #-}

-- | 'recommendationOwnerUpdatedAt' Lens
recommendationOwnerUpdatedAtL :: Lens_' Recommendation (Maybe Text)
recommendationOwnerUpdatedAtL f Recommendation{..} = (\recommendationOwnerUpdatedAt -> Recommendation { recommendationOwnerUpdatedAt, ..} ) <$> f recommendationOwnerUpdatedAt
{-# INLINE recommendationOwnerUpdatedAtL #-}

-- | 'recommendationCreatedAt' Lens
recommendationCreatedAtL :: Lens_' Recommendation (Maybe Text)
recommendationCreatedAtL f Recommendation{..} = (\recommendationCreatedAt -> Recommendation { recommendationCreatedAt, ..} ) <$> f recommendationCreatedAt
{-# INLINE recommendationCreatedAtL #-}

-- | 'recommendationUpdatedAt' Lens
recommendationUpdatedAtL :: Lens_' Recommendation (Maybe Text)
recommendationUpdatedAtL f Recommendation{..} = (\recommendationUpdatedAt -> Recommendation { recommendationUpdatedAt, ..} ) <$> f recommendationUpdatedAt
{-# INLINE recommendationUpdatedAtL #-}

-- | 'recommendationDescription' Lens
recommendationDescriptionL :: Lens_' Recommendation (Maybe A.Value)
recommendationDescriptionL f Recommendation{..} = (\recommendationDescription -> Recommendation { recommendationDescription, ..} ) <$> f recommendationDescription
{-# INLINE recommendationDescriptionL #-}

-- | 'recommendationRecommender' Lens
recommendationRecommenderL :: Lens_' Recommendation (Maybe A.Value)
recommendationRecommenderL f Recommendation{..} = (\recommendationRecommender -> Recommendation { recommendationRecommender, ..} ) <$> f recommendationRecommender
{-# INLINE recommendationRecommenderL #-}



-- * SearchByNameReq

-- | 'searchByNameReqOfficeIds' Lens
searchByNameReqOfficeIdsL :: Lens_' SearchByNameReq (Maybe [Text])
searchByNameReqOfficeIdsL f SearchByNameReq{..} = (\searchByNameReqOfficeIds -> SearchByNameReq { searchByNameReqOfficeIds, ..} ) <$> f searchByNameReqOfficeIds
{-# INLINE searchByNameReqOfficeIdsL #-}

-- | 'searchByNameReqOffset' Lens
searchByNameReqOffsetL :: Lens_' SearchByNameReq (Double)
searchByNameReqOffsetL f SearchByNameReq{..} = (\searchByNameReqOffset -> SearchByNameReq { searchByNameReqOffset, ..} ) <$> f searchByNameReqOffset
{-# INLINE searchByNameReqOffsetL #-}

-- | 'searchByNameReqSize' Lens
searchByNameReqSizeL :: Lens_' SearchByNameReq (Double)
searchByNameReqSizeL f SearchByNameReq{..} = (\searchByNameReqSize -> SearchByNameReq { searchByNameReqSize, ..} ) <$> f searchByNameReqSize
{-# INLINE searchByNameReqSizeL #-}

-- | 'searchByNameReqMust' Lens
searchByNameReqMustL :: Lens_' SearchByNameReq (A.Value)
searchByNameReqMustL f SearchByNameReq{..} = (\searchByNameReqMust -> SearchByNameReq { searchByNameReqMust, ..} ) <$> f searchByNameReqMust
{-# INLINE searchByNameReqMustL #-}



-- * Technology

-- | 'technologyOrder' Lens
technologyOrderL :: Lens_' Technology (Maybe Int)
technologyOrderL f Technology{..} = (\technologyOrder -> Technology { technologyOrder, ..} ) <$> f technologyOrder
{-# INLINE technologyOrderL #-}

-- | 'technologyStarred' Lens
technologyStarredL :: Lens_' Technology (Maybe Bool)
technologyStarredL f Technology{..} = (\technologyStarred -> Technology { technologyStarred, ..} ) <$> f technologyStarred
{-# INLINE technologyStarredL #-}

-- | 'technologyDisabled' Lens
technologyDisabledL :: Lens_' Technology (Maybe Bool)
technologyDisabledL f Technology{..} = (\technologyDisabled -> Technology { technologyDisabled, ..} ) <$> f technologyDisabled
{-# INLINE technologyDisabledL #-}

-- | 'technologyVersion' Lens
technologyVersionL :: Lens_' Technology (Maybe Int)
technologyVersionL f Technology{..} = (\technologyVersion -> Technology { technologyVersion, ..} ) <$> f technologyVersion
{-# INLINE technologyVersionL #-}

-- | 'technologyExternalUniqueId' Lens
technologyExternalUniqueIdL :: Lens_' Technology (Maybe Text)
technologyExternalUniqueIdL f Technology{..} = (\technologyExternalUniqueId -> Technology { technologyExternalUniqueId, ..} ) <$> f technologyExternalUniqueId
{-# INLINE technologyExternalUniqueIdL #-}

-- | 'technologyOwnerUpdatedAt' Lens
technologyOwnerUpdatedAtL :: Lens_' Technology (Maybe Text)
technologyOwnerUpdatedAtL f Technology{..} = (\technologyOwnerUpdatedAt -> Technology { technologyOwnerUpdatedAt, ..} ) <$> f technologyOwnerUpdatedAt
{-# INLINE technologyOwnerUpdatedAtL #-}

-- | 'technologyCreatedAt' Lens
technologyCreatedAtL :: Lens_' Technology (Maybe Text)
technologyCreatedAtL f Technology{..} = (\technologyCreatedAt -> Technology { technologyCreatedAt, ..} ) <$> f technologyCreatedAt
{-# INLINE technologyCreatedAtL #-}

-- | 'technologyUpdatedAt' Lens
technologyUpdatedAtL :: Lens_' Technology (Maybe Text)
technologyUpdatedAtL f Technology{..} = (\technologyUpdatedAt -> Technology { technologyUpdatedAt, ..} ) <$> f technologyUpdatedAt
{-# INLINE technologyUpdatedAtL #-}

-- | 'technologyUncategorized' Lens
technologyUncategorizedL :: Lens_' Technology (Maybe Bool)
technologyUncategorizedL f Technology{..} = (\technologyUncategorized -> Technology { technologyUncategorized, ..} ) <$> f technologyUncategorized
{-# INLINE technologyUncategorizedL #-}

-- | 'technologyCategory' Lens
technologyCategoryL :: Lens_' Technology (Maybe A.Value)
technologyCategoryL f Technology{..} = (\technologyCategory -> Technology { technologyCategory, ..} ) <$> f technologyCategory
{-# INLINE technologyCategoryL #-}



-- * User

-- | 'userUserId' Lens
userUserIdL :: Lens_' User (Text)
userUserIdL f User{..} = (\userUserId -> User { userUserId, ..} ) <$> f userUserId
{-# INLINE userUserIdL #-}

-- | 'userId' Lens
userIdL :: Lens_' User (Text)
userIdL f User{..} = (\userId -> User { userId, ..} ) <$> f userId
{-# INLINE userIdL #-}

-- | 'userEmail' Lens
userEmailL :: Lens_' User (Maybe Text)
userEmailL f User{..} = (\userEmail -> User { userEmail, ..} ) <$> f userEmail
{-# INLINE userEmailL #-}

-- | 'userExternalUniqueId' Lens
userExternalUniqueIdL :: Lens_' User (Maybe Text)
userExternalUniqueIdL f User{..} = (\userExternalUniqueId -> User { userExternalUniqueId, ..} ) <$> f userExternalUniqueId
{-# INLINE userExternalUniqueIdL #-}

-- | 'userUpn' Lens
userUpnL :: Lens_' User (Maybe Text)
userUpnL f User{..} = (\userUpn -> User { userUpn, ..} ) <$> f userUpn
{-# INLINE userUpnL #-}

-- | 'userName' Lens
userNameL :: Lens_' User (Maybe Text)
userNameL f User{..} = (\userName -> User { userName, ..} ) <$> f userName
{-# INLINE userNameL #-}

-- | 'userTelephone' Lens
userTelephoneL :: Lens_' User (Maybe Text)
userTelephoneL f User{..} = (\userTelephone -> User { userTelephone, ..} ) <$> f userTelephone
{-# INLINE userTelephoneL #-}

-- | 'userDefaultCvId' Lens
userDefaultCvIdL :: Lens_' User (Maybe Text)
userDefaultCvIdL f User{..} = (\userDefaultCvId -> User { userDefaultCvId, ..} ) <$> f userDefaultCvId
{-# INLINE userDefaultCvIdL #-}

-- | 'userDeactivated' Lens
userDeactivatedL :: Lens_' User (Maybe Bool)
userDeactivatedL f User{..} = (\userDeactivated -> User { userDeactivated, ..} ) <$> f userDeactivated
{-# INLINE userDeactivatedL #-}

-- | 'userDeactivatedAt' Lens
userDeactivatedAtL :: Lens_' User (Maybe Bool)
userDeactivatedAtL f User{..} = (\userDeactivatedAt -> User { userDeactivatedAt, ..} ) <$> f userDeactivatedAt
{-# INLINE userDeactivatedAtL #-}

-- | 'userCreatedAt' Lens
userCreatedAtL :: Lens_' User (Maybe Text)
userCreatedAtL f User{..} = (\userCreatedAt -> User { userCreatedAt, ..} ) <$> f userCreatedAt
{-# INLINE userCreatedAtL #-}

-- | 'userUpdatedAt' Lens
userUpdatedAtL :: Lens_' User (Maybe Text)
userUpdatedAtL f User{..} = (\userUpdatedAt -> User { userUpdatedAt, ..} ) <$> f userUpdatedAt
{-# INLINE userUpdatedAtL #-}

-- | 'userRole' Lens
userRoleL :: Lens_' User (Maybe Text)
userRoleL f User{..} = (\userRole -> User { userRole, ..} ) <$> f userRole
{-# INLINE userRoleL #-}

-- | 'userExtraRoles' Lens
userExtraRolesL :: Lens_' User (Maybe [Text])
userExtraRolesL f User{..} = (\userExtraRoles -> User { userExtraRoles, ..} ) <$> f userExtraRoles
{-# INLINE userExtraRolesL #-}

-- | 'userOfficeId' Lens
userOfficeIdL :: Lens_' User (Maybe Text)
userOfficeIdL f User{..} = (\userOfficeId -> User { userOfficeId, ..} ) <$> f userOfficeId
{-# INLINE userOfficeIdL #-}

-- | 'userOfficeName' Lens
userOfficeNameL :: Lens_' User (Maybe Text)
userOfficeNameL f User{..} = (\userOfficeName -> User { userOfficeName, ..} ) <$> f userOfficeName
{-# INLINE userOfficeNameL #-}

-- | 'userCountryId' Lens
userCountryIdL :: Lens_' User (Maybe Text)
userCountryIdL f User{..} = (\userCountryId -> User { userCountryId, ..} ) <$> f userCountryId
{-# INLINE userCountryIdL #-}

-- | 'userCountryCode' Lens
userCountryCodeL :: Lens_' User (Maybe Text)
userCountryCodeL f User{..} = (\userCountryCode -> User { userCountryCode, ..} ) <$> f userCountryCode
{-# INLINE userCountryCodeL #-}

-- | 'userLanguageCode' Lens
userLanguageCodeL :: Lens_' User (Maybe Text)
userLanguageCodeL f User{..} = (\userLanguageCode -> User { userLanguageCode, ..} ) <$> f userLanguageCode
{-# INLINE userLanguageCodeL #-}

-- | 'userImage' Lens
userImageL :: Lens_' User (Maybe UserImage)
userImageL f User{..} = (\userImage -> User { userImage, ..} ) <$> f userImage
{-# INLINE userImageL #-}



-- * UserImage

-- | 'userImageUrl' Lens
userImageUrlL :: Lens_' UserImage (Maybe Text)
userImageUrlL f UserImage{..} = (\userImageUrl -> UserImage { userImageUrl, ..} ) <$> f userImageUrl
{-# INLINE userImageUrlL #-}

-- | 'userImageThumb' Lens
userImageThumbL :: Lens_' UserImage (Maybe ImageUrl)
userImageThumbL f UserImage{..} = (\userImageThumb -> UserImage { userImageThumb, ..} ) <$> f userImageThumb
{-# INLINE userImageThumbL #-}

-- | 'userImageFitThumb' Lens
userImageFitThumbL :: Lens_' UserImage (Maybe ImageUrl)
userImageFitThumbL f UserImage{..} = (\userImageFitThumb -> UserImage { userImageFitThumb, ..} ) <$> f userImageFitThumb
{-# INLINE userImageFitThumbL #-}

-- | 'userImageLarge' Lens
userImageLargeL :: Lens_' UserImage (Maybe ImageUrl)
userImageLargeL f UserImage{..} = (\userImageLarge -> UserImage { userImageLarge, ..} ) <$> f userImageLarge
{-# INLINE userImageLargeL #-}

-- | 'userImageSmallThumb' Lens
userImageSmallThumbL :: Lens_' UserImage (Maybe ImageUrl)
userImageSmallThumbL f UserImage{..} = (\userImageSmallThumb -> UserImage { userImageSmallThumb, ..} ) <$> f userImageSmallThumb
{-# INLINE userImageSmallThumbL #-}



-- * WorkExperience

-- | 'workExperienceOrder' Lens
workExperienceOrderL :: Lens_' WorkExperience (Maybe Int)
workExperienceOrderL f WorkExperience{..} = (\workExperienceOrder -> WorkExperience { workExperienceOrder, ..} ) <$> f workExperienceOrder
{-# INLINE workExperienceOrderL #-}

-- | 'workExperienceStarred' Lens
workExperienceStarredL :: Lens_' WorkExperience (Maybe Bool)
workExperienceStarredL f WorkExperience{..} = (\workExperienceStarred -> WorkExperience { workExperienceStarred, ..} ) <$> f workExperienceStarred
{-# INLINE workExperienceStarredL #-}

-- | 'workExperienceDisabled' Lens
workExperienceDisabledL :: Lens_' WorkExperience (Maybe Bool)
workExperienceDisabledL f WorkExperience{..} = (\workExperienceDisabled -> WorkExperience { workExperienceDisabled, ..} ) <$> f workExperienceDisabled
{-# INLINE workExperienceDisabledL #-}

-- | 'workExperienceVersion' Lens
workExperienceVersionL :: Lens_' WorkExperience (Maybe Int)
workExperienceVersionL f WorkExperience{..} = (\workExperienceVersion -> WorkExperience { workExperienceVersion, ..} ) <$> f workExperienceVersion
{-# INLINE workExperienceVersionL #-}

-- | 'workExperienceExternalUniqueId' Lens
workExperienceExternalUniqueIdL :: Lens_' WorkExperience (Maybe Text)
workExperienceExternalUniqueIdL f WorkExperience{..} = (\workExperienceExternalUniqueId -> WorkExperience { workExperienceExternalUniqueId, ..} ) <$> f workExperienceExternalUniqueId
{-# INLINE workExperienceExternalUniqueIdL #-}

-- | 'workExperienceOwnerUpdatedAt' Lens
workExperienceOwnerUpdatedAtL :: Lens_' WorkExperience (Maybe Text)
workExperienceOwnerUpdatedAtL f WorkExperience{..} = (\workExperienceOwnerUpdatedAt -> WorkExperience { workExperienceOwnerUpdatedAt, ..} ) <$> f workExperienceOwnerUpdatedAt
{-# INLINE workExperienceOwnerUpdatedAtL #-}

-- | 'workExperienceCreatedAt' Lens
workExperienceCreatedAtL :: Lens_' WorkExperience (Maybe Text)
workExperienceCreatedAtL f WorkExperience{..} = (\workExperienceCreatedAt -> WorkExperience { workExperienceCreatedAt, ..} ) <$> f workExperienceCreatedAt
{-# INLINE workExperienceCreatedAtL #-}

-- | 'workExperienceUpdatedAt' Lens
workExperienceUpdatedAtL :: Lens_' WorkExperience (Maybe Text)
workExperienceUpdatedAtL f WorkExperience{..} = (\workExperienceUpdatedAt -> WorkExperience { workExperienceUpdatedAt, ..} ) <$> f workExperienceUpdatedAt
{-# INLINE workExperienceUpdatedAtL #-}

-- | 'workExperienceEmployer' Lens
workExperienceEmployerL :: Lens_' WorkExperience (Maybe A.Value)
workExperienceEmployerL f WorkExperience{..} = (\workExperienceEmployer -> WorkExperience { workExperienceEmployer, ..} ) <$> f workExperienceEmployer
{-# INLINE workExperienceEmployerL #-}

-- | 'workExperienceDescription' Lens
workExperienceDescriptionL :: Lens_' WorkExperience (Maybe A.Value)
workExperienceDescriptionL f WorkExperience{..} = (\workExperienceDescription -> WorkExperience { workExperienceDescription, ..} ) <$> f workExperienceDescription
{-# INLINE workExperienceDescriptionL #-}

-- | 'workExperienceLongDescription' Lens
workExperienceLongDescriptionL :: Lens_' WorkExperience (Maybe A.Value)
workExperienceLongDescriptionL f WorkExperience{..} = (\workExperienceLongDescription -> WorkExperience { workExperienceLongDescription, ..} ) <$> f workExperienceLongDescription
{-# INLINE workExperienceLongDescriptionL #-}

-- | 'workExperienceYearFrom' Lens
workExperienceYearFromL :: Lens_' WorkExperience (Maybe Text)
workExperienceYearFromL f WorkExperience{..} = (\workExperienceYearFrom -> WorkExperience { workExperienceYearFrom, ..} ) <$> f workExperienceYearFrom
{-# INLINE workExperienceYearFromL #-}

-- | 'workExperienceMonthFrom' Lens
workExperienceMonthFromL :: Lens_' WorkExperience (Maybe Text)
workExperienceMonthFromL f WorkExperience{..} = (\workExperienceMonthFrom -> WorkExperience { workExperienceMonthFrom, ..} ) <$> f workExperienceMonthFrom
{-# INLINE workExperienceMonthFromL #-}

-- | 'workExperienceYearTo' Lens
workExperienceYearToL :: Lens_' WorkExperience (Maybe Text)
workExperienceYearToL f WorkExperience{..} = (\workExperienceYearTo -> WorkExperience { workExperienceYearTo, ..} ) <$> f workExperienceYearTo
{-# INLINE workExperienceYearToL #-}

-- | 'workExperienceMonthTo' Lens
workExperienceMonthToL :: Lens_' WorkExperience (Maybe Text)
workExperienceMonthToL f WorkExperience{..} = (\workExperienceMonthTo -> WorkExperience { workExperienceMonthTo, ..} ) <$> f workExperienceMonthTo
{-# INLINE workExperienceMonthToL #-}


